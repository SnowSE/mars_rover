version: '3.4'

services:
  mars.web:
    image: ${DOCKER_REGISTRY-}marsweb
    build:
      context: .
      dockerfile: Mars.Web/Dockerfile
    environment:
      - SeqServer=http://seq
    networks:
      - marsnet

  mars.extraapi:
    image: ${DOCKER_REGISTRY-}marsextraapi
    build:
        context: .
        dockerfile: Mars.ExtraApi/Dockerfile
    environment:
        - SeqServer=http://seq
    networks:
      - marsnet

  seq:
    container_name: seq
    image: datalust/seq:latest
    ports:
      - "8000:80"
    volumes:
      - /datadrive:/data
    environment:
      - ACCEPT_EULA=Y
    networks:
      - marsnet

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=debug
    depends_on:
      - mars.web
    networks:
      - marsnet

  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"
    networks:
      - marsnet

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prom_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - marsnet

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
      - ./logs:/etc/output:rw # Store the logs
    ports:
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "4317:4317"   # OTLP gRPC receiver
    depends_on:
      - zipkin-all-in-one
    networks:
      - marsnet

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
    networks:
      - marsnet

volumes:
  prom_data:

networks:
  marsnet: